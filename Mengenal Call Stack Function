Mengelola Kondisi Error Dengan Async Await

==============================================

contoh code nya : 

// error-handling-async-await.js

// Fungsi yang mengembalikan Promise
function getDataFromAPI() {
  return new Promise((resolve, reject) => {
    // Simulasi pengambilan data dari API
    setTimeout(() => {
      // Simulasi error
      if (Math.random() < 0.5) {
        const data = { name: 'John Doe', age: 30 };
        resolve(data);
      } else {
        reject(new Error('Failed to fetch data'));
      }
    }, 2000);
  });
}

// Fungsi asynchronous menggunakan try/catch
async function fetchData() {
  try {
    console.log('Fetching data...');
    const data = await getDataFromAPI();
    console.log('Data received:', data);
  } catch (error) {
    console.error('Error:', error.message);
  }
}

// Memanggil fungsi asynchronous
fetchData();


=================================================
